#!/usr/bin/env python3
"""
Testes para as melhorias no sistema de tratamento de sauda√ß√µes.
"""

import sys
import os

# Adiciona o diret√≥rio pai ao path para importar os m√≥dulos
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from App.utils.first_layer import is_greeting_or_small_talk, is_vague_question, get_contextual_suggestions


def test_greeting_detection():
    """Testa a detec√ß√£o de sauda√ß√µes."""
    print("=== Teste de Detec√ß√£o de Sauda√ß√µes ===")
    
    greetings = [
        "oi",
        "ol√°",
        "bom dia",
        "boa tarde",
        "boa noite", 
        "hey",
        "hello",
        "obrigado",
        "valeu",
        "tchau",
        "at√© logo",
        "como vai",
        "tudo bem",
        "beleza",
        "hi there"
    ]
    
    non_greetings = [
        "quantos alunos est√£o matriculados",
        "qual a m√©dia de notas por disciplina",
        "mostrar presen√ßa dos alunos",
        "listar cursos dispon√≠veis",
        "an√°lise de desempenho dos estudantes"
    ]
    
    print("Testando sauda√ß√µes (devem retornar True):")
    for greeting in greetings:
        result = is_greeting_or_small_talk(greeting)
        print(f"'{greeting}' -> {result}")
    
    print("\nTestando n√£o-sauda√ß√µes (devem retornar False):")
    for non_greeting in non_greetings:
        result = is_greeting_or_small_talk(non_greeting)
        print(f"'{non_greeting}' -> {result}")


def test_vague_question_detection():
    """Testa a detec√ß√£o de perguntas vagas."""
    print("\n=== Teste de Detec√ß√£o de Perguntas Vagas ===")
    
    vague_questions = [
        "me ajuda",
        "quero dados",
        "an√°lise",
        "relat√≥rio",
        "informa√ß√µes",
        "mostre",
        "dashboard",
        "gr√°fico"
    ]
    
    specific_questions = [
        "quantos alunos t√™m nota acima de 8",
        "qual disciplina tem maior taxa de reprova√ß√£o",
        "mostrar a m√©dia de presen√ßa por turma",
        "listar os 10 melhores alunos por nota",
        "an√°lise de desempenho da disciplina de matem√°tica"
    ]
    
    print("Testando perguntas vagas (devem retornar True):")
    for vague in vague_questions:
        result = is_vague_question(vague)
        print(f"'{vague}' -> {result}")
    
    print("\nTestando perguntas espec√≠ficas (devem retornar False):")
    for specific in specific_questions:
        result = is_vague_question(specific)
        print(f"'{specific}' -> {result}")


def test_contextual_suggestions():
    """Testa a gera√ß√£o de sugest√µes contextuais."""
    print("\n=== Teste de Sugest√µes Contextuais ===")
    
    suggestions = get_contextual_suggestions()
    print(f"N√∫mero de sugest√µes retornadas: {len(suggestions)}")
    print("Sugest√µes geradas:")
    for i, suggestion in enumerate(suggestions, 1):
        print(f"{i}. {suggestion}")


if __name__ == "__main__":
    try:
        test_greeting_detection()
        test_vague_question_detection()
        test_contextual_suggestions()
        print("\nüéâ Todos os testes executados com sucesso!")
        
    except Exception as e:
        print(f"\nErro durante os testes: {e}")
        import traceback
        traceback.print_exc()
